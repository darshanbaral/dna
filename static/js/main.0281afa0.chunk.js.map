{"version":3,"sources":["components/options.tsx","components/selectionOptions.ts","components/optionList.tsx","components/panelContainer.tsx","components/seqPanelContent.tsx","components/helperFunctions.ts","index.tsx"],"names":["Options","props","_React$useState","React","checked","_React$useState2","Object","slicedToArray","val","setVal","react","FormControlLabel","control","Checkbox","value","color","onClick","newVal","toggle","retVal","label","ops","OptionList","open","setOpen","_React$useState3","grp","_React$useState4","sliderVal","setSliderVal","currentCheckedState","checkedState","_React$useState5","_React$useState6","setCheckedState","handleToggle","onCheckboxToggle","handleClose","style","position","top","Fab","size","MenuRounded_default","a","cursor","Modal","onClose","aria-labelledby","aria-describedby","overflowY","backgroundColor","padding","width","maxWidth","border","left","transform","display","flexDirection","justifyContent","margin","CloseRounded_default","Slider","defaultValue","valueLabelDisplay","onChange","_event","onSliderChange","step","marks","min","max","map","el","PanelContainer","show","setShow","ExpansionPanel","disabled","expanded","ExpansionPanelSummary","minHeight","expandIcon","ExpandMore_default","ExpansionPanelDetails","content","SeqPanelContent","split","lib_default","text","IconButton","aria-label","FileCopyOutlined_default","String","prototype","removeWhiteSpace","this","replace","sanitize","toUpperCase","countBase","length","getGCRatio","gc","match","at","Math","round","getNBase","getInvalidBase","rev","reverse","join","comp","lookup","A","T","C","G","N","addSpace","toString","re","RegExp","App","state","seq","bc","bcval","gcval","nb","nbval","invalid","os","osval","cs","csval","rs","rsval","rcs","rcsval","sanitizedValue","displaySeqs","_this","setState","onInputChange","event","target","onFocusInput","select","handleCheckboxToggle","x","y","defineProperty","handleSliderChange","className","height","zIndex","marginLeft","FormGroup","TextareaAutosize","resize","fontSize","rows","spellCheck","placeholder","onFocus","marginTop","href","rootElement","document","getElementById","render","src_App"],"mappings":"oUAKe,SAASA,EAAQC,GAAY,IAAAC,EACpBC,WAAeF,EAAMG,SADDC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GACnCM,EADmCH,EAAA,GAC9BI,EAD8BJ,EAAA,GAO1C,OACEK,EAAA,cAACC,EAAA,EAAD,CACEC,QACEF,EAAA,cAACG,EAAA,EAAD,CACEC,MAAOb,EAAMa,MACbC,MAAM,UACNX,QAASI,EACTQ,QAZY,WAClB,IAAIC,GAAUT,EACdC,EAAOQ,GACPhB,EAAMiB,OAAOjB,EAAMkB,OAAQF,MAYzBG,MAAOnB,EAAMmB,QCrBnB,IAsBeC,EAtBH,CACV,CACEP,MAAO,aACPM,MAAO,kBACPD,OAAQ,MAEV,CAAEL,MAAO,WAAYM,MAAO,WAAYD,OAAQ,MAChD,CACEL,MAAO,SACPM,MAAO,UACPD,OAAQ,MAEV,CAAEL,MAAO,WAAYM,MAAO,YAAaD,OAAQ,MACjD,CAAEL,MAAO,aAAcM,MAAO,cAAeD,OAAQ,MACrD,CAAEL,MAAO,UAAWM,MAAO,WAAYD,OAAQ,MAC/C,CACEL,MAAO,iBACPM,MAAO,qBACPD,OAAQ,QCRG,SAASG,EAAWrB,GAAY,IAAAC,EACrBC,YAAe,GADME,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GACtCqB,EADsClB,EAAA,GAChCmB,EADgCnB,EAAA,GAAAoB,EAEXtB,WAAeF,EAAMyB,KAFVC,EAAArB,OAAAC,EAAA,EAAAD,CAAAmB,EAAA,GAEtCG,EAFsCD,EAAA,GAE3BE,EAF2BF,EAAA,GAGzCG,EAAkD7B,EAAM8B,aAHfC,EAIL7B,WAAe2B,GAJVG,EAAA3B,OAAAC,EAAA,EAAAD,CAAA0B,EAAA,GAItCD,EAJsCE,EAAA,GAIxBC,EAJwBD,EAAA,GAMvCE,EAAe,SAAChB,EAAgBf,GACpC0B,EAAoBX,GAAUf,EAC9B8B,EAAgBJ,GAChB7B,EAAMmC,iBAAiBjB,EAAQf,IAY3BiC,EAAc,WAClBb,GAAQ,IAGV,OACEd,EAAA,yBACEA,EAAA,qBACE4B,MAAO,CACLC,SAAU,WACVC,IAAK,QAEPxB,QAfa,WACjBQ,GAAQ,KAgBJd,EAAA,cAAC+B,EAAA,EAAD,CAAK1B,MAAM,UAAU2B,KAAK,SACxBhC,EAAA,cAACiC,EAAAC,EAAD,CAAiBN,MAAO,CAAEO,OAAQ,eAItCnC,EAAA,cAACoC,EAAA,EAAD,CACEvB,KAAMA,EACNwB,QAASV,EACTW,kBAAgB,UAChBC,mBAAiB,UACjBX,MAAO,CAAEY,UAAW,WAEpBxC,EAAA,qBACE4B,MAAO,CACLa,gBAAiB,QACjBC,QAAS,MACTC,MAAO,OACPC,SAAU,QACVC,OAAQ,gBACRhB,SAAU,QACVC,IAAK,MACLgB,KAAM,MACNC,UAAW,wBACXC,QAAS,OACTC,cAAe,WAGjBjD,EAAA,qBACE4B,MAAO,CACLoB,QAAS,OACTC,cAAe,MACfC,eAAgB,kBAGlBlD,EAAA,oBAAI4B,MAAO,CAAEuB,OAAQ,MAArB,WACAnD,EAAA,cAACoD,EAAAlB,EAAD,CACE7B,MAAM,UACNC,QAASqB,EACTC,MAAO,CAAEO,OAAQ,cAIrBnC,EAAA,oBAAI4B,MAAO,CAAEuB,OAAQ,gBAArB,cACAnD,EAAA,cAACqD,EAAA,EAAD,CACEC,aAAcpC,EACdoB,kBAAgB,kBAChBiB,kBAAkB,OAClBC,SArEiB,SAACC,EAAarD,GACvCe,EAAaf,GACbb,EAAMmE,eAAeD,EAAQrD,IAoErBuD,KAAM,EACNC,OAAO,EACPC,IAAK,EACLC,IAAK,IAEP9D,EAAA,oBAAI4B,MAAO,CAAEuB,OAAQ,gBAArB,WACCxC,EAAIoD,IAAI,SAACC,GACR,OACEhE,EAAA,cAACV,EAAD,CACEc,MAAO4D,EAAG5D,MACVM,MAAOsD,EAAGtD,MACVD,OAAQuD,EAAGvD,OACXf,QAAS2B,EAAa2C,EAAGvD,QACzBD,OAAQiB,yDCpGT,SAASwC,EAAe1E,GAAY,IAAAC,EACzBC,WAAeF,EAAM2E,MADIvE,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAC1C0E,EAD0CvE,EAAA,GACpCwE,EADoCxE,EAAA,GAejD,OACEK,EAAA,cAACoE,EAAA,EAAD,CACEC,UAAW9E,EAAM2E,KACjBI,SAAUJ,GAAQ3E,EAAM2E,KACxBtC,MAAO,CAAEuB,OAAQ,SAAUtB,SAAU,YACrC2B,SAjBiB,WACnBW,GAASD,KAkBPlE,EAAA,cAACuE,EAAA,EAAD,CACE3C,MAAO,CAAEuB,OAAQ,IAAKqB,UAAW,MAAO9B,QAAS,UACjD+B,WAAYzE,EAAA,cAAC0E,EAAAxC,EAAD,OAEZlC,EAAA,oBAAI4B,MAAO,CAAEuB,OAAQ,MAAQ5D,EAAMmB,QAErCV,EAAA,cAAC2E,EAAA,EAAD,CAAuB/C,MAAO,CAAEc,QAAS,WACtCnD,EAAMqF,wDC9BA,SAASC,EAAgBtF,GAStC,OAAOA,EAAM2E,KACXlE,EAAA,qBAAK4B,MAAO,CAAEC,SAAU,aACtB7B,EAAA,yBAAeT,EAAMO,IATZgF,MAAM,IAAIf,IAAI,SAACC,GACxB,OACEhE,EAAA,sBAAM4B,MAAO,CAAEvB,MAAc,MAAP2D,EAAa,MAAQ,YAAcA,MAQ3DhE,EAAA,qBACE4B,MAAO,CACLC,SAAU,WACVC,IAAK,QACLgB,KAAM,UAGR9C,EAAA,cAAC+E,EAAA7C,EAAD,CAAiB8C,KAAMzF,EAAMO,KAC3BE,EAAA,cAACiF,EAAA,EAAD,CAAYC,aAAW,OAAO7E,MAAM,WAClCL,EAAA,cAACmF,EAAAjD,EAAD,UAKN,KCjBNkD,OAAOC,UAAUC,iBAAmB,WAClC,OAAOC,KAAKC,QAAQ,MAAO,KAG7BJ,OAAOC,UAAUI,SAAW,WAC1B,OAAOF,KAAKD,mBACTI,cACAF,QAAQ,gBAAiB,MAG9BJ,OAAOC,UAAUM,UAAY,WAC3B,OAAOJ,KAAKD,mBAAmBM,QAGjCR,OAAOC,UAAUQ,WAAa,WAC5B,IAAIC,GAAMP,KAAKQ,MAAM,aAAe,IAAIH,OACpCI,GAAMT,KAAKQ,MAAM,aAAe,IAAIH,OAExC,OADcK,KAAKC,MAAO,IAAMJ,GAAOE,EAAKF,IAAO,KAIrDV,OAAOC,UAAUc,SAAW,WAC1B,OAAOZ,KAAKQ,MAAM,QAAUR,KAAKQ,MAAM,QAAQH,OAAS,GAG1DR,OAAOC,UAAUe,eAAiB,WAChC,OAAOb,KAAKC,QAAQ,6BAA8B,IAAII,QAGxDR,OAAOC,UAAUgB,IAAM,WACrB,OAAOd,KAAKT,MAAM,IAAIwB,UAAUC,KAAK,KAGvCnB,OAAOC,UAAUmB,KAAO,WACtB,IAAIC,EAAoC,CACtCC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,KAEL,OAAOvB,KAAKT,MAAM,IACff,IAAI,SAACC,GAAD,OAAQyC,EAAOzC,KACnBuC,KAAK,KAGVnB,OAAOC,UAAU0B,SAAW,SAAU/F,GACpC,GAAY,IAARA,EACF,OAAOuE,KAAKyB,WAEd,IAAMC,EAAK,IAAIC,OAAO,OAASlG,EAAT,IAAoB,KAC1C,OAAOuE,KAAKQ,MAAMkB,GAAIV,KAAK,sDCvDRY,6MACnBC,MAAgC,CAC9BC,IAAK,OACLC,IAAI,EACJC,MAAO,EACPzB,IAAI,EACJ0B,MAAO,GACPC,IAAI,EACJC,MAAO,EACPC,QAAS,EACTC,IAAI,EACJC,MAAO,OACPC,IAAI,EACJC,MAAO,OACPC,IAAI,EACJC,MAAO,OACPC,KAAK,EACLC,OAAQ,OACRnH,IAAK,KAGPoH,eAAiB,SAEjBC,YAAc,SAAChB,GACTiB,EAAKlB,MAAMQ,IACbU,EAAKC,SAAS,CAAEV,MAAOR,EAAIN,SAASuB,EAAKlB,MAAMpG,OAE7CsH,EAAKlB,MAAMY,IACbM,EAAKC,SAAS,CAAEN,MAAOZ,EAAIhB,MAAMU,SAASuB,EAAKlB,MAAMpG,OAEnDsH,EAAKlB,MAAMU,IACbQ,EAAKC,SAAS,CAAER,MAAOV,EAAIb,OAAOO,SAASuB,EAAKlB,MAAMpG,OAEpDsH,EAAKlB,MAAMc,KACbI,EAAKC,SAAS,CACZJ,OAAQd,EAAIhB,MAAMG,OAAOO,SAASuB,EAAKlB,MAAMpG,UAKnDwH,cAAgB,SAACC,GACf,IACIrI,EADWqI,EAAMC,OACMtI,MACtBA,IACHA,EAAQ,IAEVkI,EAAKF,eAAiBhI,EAAMqF,WAC5B6C,EAAKC,SAAS,CAAElB,IAAKjH,IACrBkI,EAAKD,YAAYC,EAAKF,gBACtBE,EAAKC,SAAS,CAAEhB,MAAOnH,EAAMuF,cAC7B2C,EAAKC,SAAS,CAAEf,MAAOpH,EAAMyF,eAC7ByC,EAAKC,SAAS,CAAEb,MAAOtH,EAAM+F,WAAYwB,QAASvH,EAAMgG,sBAG1DuC,aAAe,SAACF,GACbA,EAAMC,OAA+BE,YAGxCC,qBAAuB,SAACC,EAAWC,GACjCT,EAAKC,SAAL3I,OAAAoJ,EAAA,EAAApJ,CAAA,GAAiBkJ,EAAIC,OAGvBE,mBAAqB,SAACxF,EAAarD,GACjCkI,EAAKC,SAAS,CAAEvH,IAAKZ,GAAS,WAC5BkI,EAAKD,YAAYC,EAAKF,2FAKxB,OACEpI,EAAA,qBACEkJ,UAAU,MACVtH,MAAO,CACLoB,QAAS,OACTC,cAAe,SACfpB,SAAU,aAGZ7B,EAAA,qBACE4B,MAAO,CACLe,MAAO,OACPwG,OAAQ,OACRtH,SAAU,QACVC,IAAK,IACLW,gBAAiB,aACjB2G,OAAQ,KAGT,IACDpJ,EAAA,cAACY,EAAD,CACES,aAAc,CACZiG,GAAI/B,KAAK6B,MAAME,GACfxB,GAAIP,KAAK6B,MAAMtB,GACf2B,GAAIlC,KAAK6B,MAAMK,GACfO,GAAIzC,KAAK6B,MAAMY,GACfJ,GAAIrC,KAAK6B,MAAMQ,GACfE,GAAIvC,KAAK6B,MAAMU,GACfI,IAAK3C,KAAK6B,MAAMc,KAElBxG,iBAAkB6D,KAAKsD,qBACvBnF,eAAgB6B,KAAK0D,mBACrBjI,IAAKuE,KAAK6B,MAAMpG,OAGpBhB,EAAA,qBACE4B,MAAO,CACLe,MAAO,oBACP0G,WAAY,SAGdrJ,EAAA,oBACE4B,MAAO,CACLuB,OAAQ,IACRT,QAAS,WAHb,OASA1C,EAAA,cAACsJ,EAAA,EAAD,KACEtJ,EAAA,oBAAI4B,MAAO,CAAEuB,OAAQ,kBAArB,kBACAnD,EAAA,cAACuJ,EAAA,EAAD,CACE3H,MAAO,CACL4H,OAAQ,WACRhF,UAAW,OACXiF,SAAU,OAEZC,KAAM,EACNtJ,MAAOmF,KAAK6B,MAAMC,IAClBsC,YAAY,EACZzE,aAAW,qBACX0E,YAAY,6EACZpG,SAAU+B,KAAKiD,cACfqB,QAAStE,KAAKoD,gBAIlB3I,EAAA,oBAAI4B,MAAO,CAAEuB,OAAQ,eAArB,WACAnD,EAAA,cAACiE,EAAD,CACEvD,MAAM,aACNkE,QACEW,KAAK6B,MAAME,GACTtH,EAAA,cAACA,EAAA,SAAD,KACEA,EAAA,yBAAMuF,KAAK6B,MAAMG,QAGnB,GAGJrD,KAAMqB,KAAK6B,MAAME,KAEnBtH,EAAA,cAACiE,EAAD,CACEvD,MAAM,WACNkE,QACEW,KAAK6B,MAAMtB,GACT9F,EAAA,cAACA,EAAA,SAAD,KACEA,EAAA,yBAAMuF,KAAK6B,MAAMI,QAGnB,GAGJtD,KAAMqB,KAAK6B,MAAMtB,KAEnB9F,EAAA,cAACiE,EAAD,CACEvD,MAAM,UACNkE,QACEW,KAAK6B,MAAMK,GACTzH,EAAA,cAACA,EAAA,SAAD,KACEA,EAAA,yBACEA,EAAA,sBACE4B,MAAO,CACLvB,MAAOkF,KAAK6B,MAAMM,MAAQ,EAAI,MAAQ,YAGvCnC,KAAK6B,MAAMM,OACN,IAPV,cAQc,IACZ1H,EAAA,sBACE4B,MAAO,CACLvB,MAAOkF,KAAK6B,MAAMO,QAAU,EAAI,MAAQ,YAGzCpC,KAAK6B,MAAMO,SACN,IAfV,mBAoBF,GAGJzD,KAAMqB,KAAK6B,MAAMK,KAEnBzH,EAAA,cAACiE,EAAD,CACEvD,MAAM,WACNkE,QACE5E,EAAA,cAAC6E,EAAD,CAAiB/E,IAAKyF,KAAK6B,MAAMS,MAAO3D,KAAMqB,KAAK6B,MAAMQ,KAE3D1D,KAAMqB,KAAK6B,MAAMQ,KAEnB5H,EAAA,cAACiE,EAAD,CACEvD,MAAM,aACNkE,QACE5E,EAAA,cAAC6E,EAAD,CAAiB/E,IAAKyF,KAAK6B,MAAMW,MAAO7D,KAAMqB,KAAK6B,MAAMU,KAE3D5D,KAAMqB,KAAK6B,MAAMU,KAEnB9H,EAAA,cAACiE,EAAD,CACEvD,MAAM,UACNkE,QACE5E,EAAA,cAAC6E,EAAD,CAAiB/E,IAAKyF,KAAK6B,MAAMa,MAAO/D,KAAMqB,KAAK6B,MAAMY,KAE3D9D,KAAMqB,KAAK6B,MAAMY,KAEnBhI,EAAA,cAACiE,EAAD,CACEvD,MAAM,qBACNkE,QACE5E,EAAA,cAAC6E,EAAD,CAAiB/E,IAAKyF,KAAK6B,MAAMe,OAAQjE,KAAMqB,KAAK6B,MAAMc,MAE5DhE,KAAMqB,KAAK6B,MAAMc,OAGrBlI,EAAA,wBAAQ4B,MAAO,CAAEuH,OAAQ,OAAQW,UAAW,SAA5C,WACU9J,EAAA,mBAAG+J,KAAK,iCAAR,WADV,SACoE,IAClE/J,EAAA,mBAAG+J,KAAK,uCAAR,QAFF,aA/NyBtK,aAwO3BuK,EAAcC,SAASC,eAAe,QAC5CC,iBAAOnK,EAAA,cAACoK,EAAD,MAASJ","file":"static/js/main.0281afa0.chunk.js","sourcesContent":["import * as React from \"react\";\r\n\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nexport default function Options(props: any) {\r\n  const [val, setVal] = React.useState(props.checked);\r\n  const handleClick = () => {\r\n    let newVal = !val;\r\n    setVal(newVal);\r\n    props.toggle(props.retVal, newVal);\r\n  };\r\n  return (\r\n    <FormControlLabel\r\n      control={\r\n        <Checkbox\r\n          value={props.value}\r\n          color=\"primary\"\r\n          checked={val}\r\n          onClick={handleClick}\r\n        />\r\n      }\r\n      label={props.label}\r\n    />\r\n  );\r\n}\r\n","//Options\r\nconst ops = [\r\n  {\r\n    value: \"base-count\",\r\n    label: \"Number of Bases\",\r\n    retVal: \"bc\",\r\n  },\r\n  { value: \"gc-ratio\", label: \"GC ratio\", retVal: \"gc\" },\r\n  {\r\n    value: \"n-base\",\r\n    label: \"N Bases\",\r\n    retVal: \"nb\",\r\n  },\r\n  { value: \"original\", label: \"Original \", retVal: \"os\" },\r\n  { value: \"complement\", label: \"Complement \", retVal: \"cs\" },\r\n  { value: \"reverse\", label: \"Reverse \", retVal: \"rs\" },\r\n  {\r\n    value: \"rev-complement\",\r\n    label: \"Reverse Complement\",\r\n    retVal: \"rcs\",\r\n  },\r\n];\r\n\r\nexport default ops;\r\n","import * as React from \"react\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Zoom from \"@material-ui/core/Zoom\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport MenuRoundedIcon from \"@material-ui/icons/MenuRounded\";\r\nimport CloseRoundedIcon from \"@material-ui/icons/CloseRounded\";\r\nimport Options from \"./options\";\r\nimport ops from \"./selectionOptions\";\r\n\r\nexport default function OptionList(props: any) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [sliderVal, setSliderVal] = React.useState(props.grp);\r\n  let currentCheckedState: { [key: string]: boolean } = props.checkedState;\r\n  const [checkedState, setCheckedState] = React.useState(currentCheckedState);\r\n\r\n  const handleToggle = (retVal: string, checked: boolean) => {\r\n    currentCheckedState[retVal] = checked;\r\n    setCheckedState(currentCheckedState);\r\n    props.onCheckboxToggle(retVal, checked);\r\n  };\r\n\r\n  const handleSliderChange = (_event: any, value: any) => {\r\n    setSliderVal(value);\r\n    props.onSliderChange(_event, value);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          top: \"15px\",\r\n        }}\r\n        onClick={handleOpen}\r\n      >\r\n        <Fab color=\"primary\" size=\"small\">\r\n          <MenuRoundedIcon style={{ cursor: \"pointer\" }} />\r\n        </Fab>\r\n      </div>\r\n\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"Options\"\r\n        aria-describedby=\"Options\"\r\n        style={{ overflowY: \"scroll\" }}\r\n      >\r\n        <div\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            padding: \"5px\",\r\n            width: \"95vw\",\r\n            maxWidth: \"350px\",\r\n            border: \"solid 1px red\",\r\n            position: \"fixed\",\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <h2 style={{ margin: \"0\" }}>Options</h2>\r\n            <CloseRoundedIcon\r\n              color=\"primary\"\r\n              onClick={handleClose}\r\n              style={{ cursor: \"pointer\" }}\r\n            />\r\n          </div>\r\n\r\n          <h3 style={{ margin: \"0.5em 0 0 0\" }}>Chunk Size</h3>\r\n          <Slider\r\n            defaultValue={sliderVal}\r\n            aria-labelledby=\"discrete-slider\"\r\n            valueLabelDisplay=\"auto\"\r\n            onChange={handleSliderChange}\r\n            step={1}\r\n            marks={true}\r\n            min={0}\r\n            max={6}\r\n          />\r\n          <h3 style={{ margin: \"0.5em 0 0 0\" }}>Outputs</h3>\r\n          {ops.map((el) => {\r\n            return (\r\n              <Options\r\n                value={el.value}\r\n                label={el.label}\r\n                retVal={el.retVal}\r\n                checked={checkedState[el.retVal]}\r\n                toggle={handleToggle}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nexport default function PanelContainer(props: any) {\r\n  const [show, setShow] = React.useState(props.show);\r\n\r\n  const handleChange = () => {\r\n    setShow(!show);\r\n  };\r\n\r\n  const makeNRed = (seq: string) => {\r\n    return seq.split(\"\").map((el: string) => {\r\n      return (\r\n        <span style={{ color: el === \"N\" ? \"red\" : \"inherit\" }}>{el}</span>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ExpansionPanel\r\n      disabled={!props.show}\r\n      expanded={show && props.show}\r\n      style={{ margin: \"10px 0\", position: \"relative\" }}\r\n      onChange={handleChange}\r\n    >\r\n      <ExpansionPanelSummary\r\n        style={{ margin: \"0\", minHeight: \"1em\", padding: \"0 24px\" }}\r\n        expandIcon={<ExpandMoreIcon />}\r\n      >\r\n        <h4 style={{ margin: \"0\" }}>{props.label}</h4>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails style={{ padding: \"0 24px\" }}>\r\n        {props.content}\r\n      </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\r\nimport CopyToClipboard from \"react-copy-to-clipboard\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nexport default function SeqPanelContent(props: any) {\r\n  const makeNRed = (seq: string) => {\r\n    return seq.split(\"\").map((el: string) => {\r\n      return (\r\n        <span style={{ color: el === \"N\" ? \"red\" : \"inherit\" }}>{el}</span>\r\n      );\r\n    });\r\n  };\r\n\r\n  return props.show ? (\r\n    <div style={{ position: \"relative\" }}>\r\n      <pre>{makeNRed(props.val)}</pre>\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          top: \"-60px\",\r\n          left: \"-75px\",\r\n        }}\r\n      >\r\n        <CopyToClipboard text={props.val}>\r\n          <IconButton aria-label=\"copy\" color=\"primary\">\r\n            <FileCopyOutlinedIcon />\r\n          </IconButton>\r\n        </CopyToClipboard>\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n}\r\n","declare global {\r\n  interface String {\r\n    removeWhiteSpace(): string;\r\n    sanitize(): string;\r\n    rev(): string;\r\n    comp(): string;\r\n    addSpace(grp: number): string;\r\n    countBase(): number;\r\n    getGCRatio(): number;\r\n    getNBase(): number;\r\n    getInvalidBase(): number;\r\n  }\r\n}\r\n\r\nString.prototype.removeWhiteSpace = function () {\r\n  return this.replace(/\\s/g, \"\");\r\n};\r\n\r\nString.prototype.sanitize = function () {\r\n  return this.removeWhiteSpace()\r\n    .toUpperCase()\r\n    .replace(/[^A|C|T|G|N]/g, \"N\");\r\n};\r\n\r\nString.prototype.countBase = function () {\r\n  return this.removeWhiteSpace().length;\r\n};\r\n\r\nString.prototype.getGCRatio = function () {\r\n  let gc = (this.match(/G|C|g|c/g) || []).length;\r\n  let at = (this.match(/A|T|a|t/g) || []).length;\r\n  let gcRatio = Math.round((100 * gc) / (at + gc)) / 100;\r\n  return gcRatio;\r\n};\r\n\r\nString.prototype.getNBase = function () {\r\n  return this.match(/N|n/g) ? this.match(/N|n/g).length : 0;\r\n};\r\n\r\nString.prototype.getInvalidBase = function () {\r\n  return this.replace(/A|C|T|G|N|a|c|t|g|n|\\s|\\n/g, \"\").length;\r\n};\r\n\r\nString.prototype.rev = function () {\r\n  return this.split(\"\").reverse().join(\"\");\r\n};\r\n\r\nString.prototype.comp = function () {\r\n  let lookup: { [key: string]: string } = {\r\n    A: \"T\",\r\n    T: \"A\",\r\n    C: \"G\",\r\n    G: \"C\",\r\n    N: \"N\",\r\n  };\r\n  return this.split(\"\")\r\n    .map((el) => lookup[el])\r\n    .join(\"\");\r\n};\r\n\r\nString.prototype.addSpace = function (grp: number) {\r\n  if (grp === 0) {\r\n    return this.toString();\r\n  }\r\n  const re = new RegExp(`.{0,` + grp + `}`, \"g\");\r\n  return this.match(re).join(\" \");\r\n};\r\n\r\nexport {};\r\n","import * as React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport OptionList from \"./components/optionList\";\r\nimport PanelContainer from \"./components/panelContainer\";\r\nimport SeqPanelContent from \"./components/seqPanelContent\";\r\nimport {} from \"./components/helperFunctions\";\r\nimport \"./styles.css\";\r\n\r\nexport default class App extends React.Component {\r\n  state: { [key: string]: any } = {\r\n    seq: \"ACTG\",\r\n    bc: true, //base count\r\n    bcval: 4,\r\n    gc: true, //GC ratio\r\n    gcval: 0.5,\r\n    nb: true, //N bases\r\n    nbval: 0,\r\n    invalid: 0,\r\n    os: true, //Original Sequence\r\n    osval: \"ACTG\",\r\n    cs: true, //Complement Sequence\r\n    csval: \"TGAC\",\r\n    rs: true, //Reverse Sequence\r\n    rsval: \"GTCA\",\r\n    rcs: true, //Reverse Complement Sequence\r\n    rcsval: \"CAGT\",\r\n    grp: 4, //Groups of letters in the output (eg. ACT GTA CT)\r\n  };\r\n\r\n  sanitizedValue = \"ACTG\";\r\n\r\n  displaySeqs = (seq: string) => {\r\n    if (this.state.os) {\r\n      this.setState({ osval: seq.addSpace(this.state.grp) });\r\n    }\r\n    if (this.state.rs) {\r\n      this.setState({ rsval: seq.rev().addSpace(this.state.grp) });\r\n    }\r\n    if (this.state.cs) {\r\n      this.setState({ csval: seq.comp().addSpace(this.state.grp) });\r\n    }\r\n    if (this.state.rcs) {\r\n      this.setState({\r\n        rcsval: seq.rev().comp().addSpace(this.state.grp),\r\n      });\r\n    }\r\n  };\r\n\r\n  onInputChange = (event: React.FormEvent<HTMLTextAreaElement>) => {\r\n    const target = event.target as HTMLTextAreaElement;\r\n    let value: string = target.value;\r\n    if (!value) {\r\n      value = \"\";\r\n    }\r\n    this.sanitizedValue = value.sanitize();\r\n    this.setState({ seq: value });\r\n    this.displaySeqs(this.sanitizedValue);\r\n    this.setState({ bcval: value.countBase() });\r\n    this.setState({ gcval: value.getGCRatio() });\r\n    this.setState({ nbval: value.getNBase(), invalid: value.getInvalidBase() });\r\n  };\r\n\r\n  onFocusInput = (event: React.FormEvent<HTMLTextAreaElement>) => {\r\n    (event.target as HTMLTextAreaElement).select();\r\n  };\r\n\r\n  handleCheckboxToggle = (x: string, y: boolean) => {\r\n    this.setState({ [x]: y });\r\n  };\r\n\r\n  handleSliderChange = (_event: any, value: any) => {\r\n    this.setState({ grp: value }, () => {\r\n      this.displaySeqs(this.sanitizedValue);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"App\"\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          position: \"relative\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            width: \"50px\",\r\n            height: \"50px\",\r\n            position: \"fixed\",\r\n            top: \"0\",\r\n            backgroundColor: \"whitesmoke\",\r\n            zIndex: 20,\r\n          }}\r\n        >\r\n          {\" \"}\r\n          <OptionList\r\n            checkedState={{\r\n              bc: this.state.bc,\r\n              gc: this.state.gc,\r\n              nb: this.state.nb,\r\n              rs: this.state.rs,\r\n              os: this.state.os,\r\n              cs: this.state.cs,\r\n              rcs: this.state.rcs,\r\n            }}\r\n            onCheckboxToggle={this.handleCheckboxToggle}\r\n            onSliderChange={this.handleSliderChange}\r\n            grp={this.state.grp}\r\n          />\r\n        </div>\r\n        <div\r\n          style={{\r\n            width: \"calc(100% - 50px)\",\r\n            marginLeft: \"50px\",\r\n          }}\r\n        >\r\n          <h1\r\n            style={{\r\n              margin: \"0\",\r\n              padding: \"10px 0\",\r\n            }}\r\n          >\r\n            DNA\r\n          </h1>\r\n\r\n          <FormGroup>\r\n            <h3 style={{ margin: \"10px 0 10px 0\" }}>Input DNA Data</h3>\r\n            <TextareaAutosize\r\n              style={{\r\n                resize: \"vertical\",\r\n                minHeight: \"20px\",\r\n                fontSize: \"1em\",\r\n              }}\r\n              rows={5}\r\n              value={this.state.seq}\r\n              spellCheck={false}\r\n              aria-label=\"Enter DNA sequence\"\r\n              placeholder=\"White spaces and line breaks will be ignored. Input is not case sensitive.\"\r\n              onChange={this.onInputChange}\r\n              onFocus={this.onFocusInput}\r\n            />\r\n          </FormGroup>\r\n\r\n          <h3 style={{ margin: \"10px 0 0 0\" }}>Outputs</h3>\r\n          <PanelContainer\r\n            label=\"Base Count\"\r\n            content={\r\n              this.state.bc ? (\r\n                <React.Fragment>\r\n                  <pre>{this.state.bcval}</pre>\r\n                </React.Fragment>\r\n              ) : (\r\n                \"\"\r\n              )\r\n            }\r\n            show={this.state.bc}\r\n          />\r\n          <PanelContainer\r\n            label=\"GC Ratio\"\r\n            content={\r\n              this.state.gc ? (\r\n                <React.Fragment>\r\n                  <pre>{this.state.gcval}</pre>\r\n                </React.Fragment>\r\n              ) : (\r\n                \"\"\r\n              )\r\n            }\r\n            show={this.state.gc}\r\n          />\r\n          <PanelContainer\r\n            label=\"N Bases\"\r\n            content={\r\n              this.state.nb ? (\r\n                <React.Fragment>\r\n                  <pre>\r\n                    <span\r\n                      style={{\r\n                        color: this.state.nbval > 0 ? \"red\" : \"inherit\",\r\n                      }}\r\n                    >\r\n                      {this.state.nbval}\r\n                    </span>{\" \"}\r\n                    N bases and{\" \"}\r\n                    <span\r\n                      style={{\r\n                        color: this.state.invalid > 0 ? \"red\" : \"inherit\",\r\n                      }}\r\n                    >\r\n                      {this.state.invalid}\r\n                    </span>{\" \"}\r\n                    invalid bases.\r\n                  </pre>\r\n                </React.Fragment>\r\n              ) : (\r\n                \"\"\r\n              )\r\n            }\r\n            show={this.state.nb}\r\n          />\r\n          <PanelContainer\r\n            label=\"Original\"\r\n            content={\r\n              <SeqPanelContent val={this.state.osval} show={this.state.os} />\r\n            }\r\n            show={this.state.os}\r\n          />\r\n          <PanelContainer\r\n            label=\"Complement\"\r\n            content={\r\n              <SeqPanelContent val={this.state.csval} show={this.state.cs} />\r\n            }\r\n            show={this.state.cs}\r\n          />\r\n          <PanelContainer\r\n            label=\"Reverse\"\r\n            content={\r\n              <SeqPanelContent val={this.state.rsval} show={this.state.rs} />\r\n            }\r\n            show={this.state.rs}\r\n          />\r\n          <PanelContainer\r\n            label=\"Reverse Complement\"\r\n            content={\r\n              <SeqPanelContent val={this.state.rcsval} show={this.state.rcs} />\r\n            }\r\n            show={this.state.rcs}\r\n          />\r\n        </div>\r\n        <footer style={{ height: \"50px\", marginTop: \"30px\" }}>\r\n          Made by <a href=\"https://www.darshanbaral.com/\">Darshan</a>. Fork{\" \"}\r\n          <a href=\"https://github.com/darshanbaral/dna\">here</a>.\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nrender(<App />, rootElement);\r\n"],"sourceRoot":""}